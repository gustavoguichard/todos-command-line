#!/usr/bin/env ruby
# frozen_string_literal: true

require 'gli'
require 'todo'

class App
  extend GLI::App

  program_desc 'Manage a Todo list in your terminal'

  version Todo::VERSION

  subcommand_option_handling :normal

  desc 'File to save the todos'
  default_value Todo::FileUtils::TODO_FILE
  arg_name 'Filename'
  flag %i[filename f]

  desc 'Creates new todos'
  arg_name '"A todo" "Another todo"'
  command :new do |c|
    c.flag :priority
    c.switch :f

    c.action do |global_options, _options, args|
      todos = Todos.new(global_options[:filename])
      todos.new_task(*args)
    end
  end

  desc 'List tasks'
  command %i[list ls] do |c|
    c.desc 'Format of the output (pretty for TTY, csv otherwise)'
    c.arg_name 'csv|pretty'
    c.flag :format

    c.flag :s

    c.action do |global_options, options|
      todos = Todos.new(global_options[:filename])
      todos.list(options)
    end
  end

  desc 'Toggles a todo completed given it\'s number'
  arg_name 'number...'
  command :done do |c|
    c.action do |global_options, _options, args|
      todos = Todos.new(global_options[:filename])
      todos.done(*args)
    end
  end

  desc 'Removes a todo at given number(s)'
  arg_name 'number...'
  command %i[remove rm] do |c|
    c.action do |global_options, _options, args|
      todos = Todos.new(global_options[:filename])
      todos.remove(*args)
    end
  end

  pre do |_global, _command, _options, _args|
    true
  end

  post do |global, command, options, args|
  end

  on_error do |_exception|
    true
  end
end

exit App.run(ARGV)
